Guia de unidaded de medidads no css:quando usar cada uma

1. PX (pixels)

Uso recomendado:

Para tamanhos fixos e precisos que não devem variar com o tamanho da tela ou texto.
ideal para BORDAS, MARGENS uma aparência consistente.



QUANDO EVITAR:

Quando você deseja que o design seja mais flexível e adaptável a diferentes tamanhos de tela
e configurações de acessibilidade.



-------------------------------------------------
EXEMPLO DE USO:

html
<div class= "box"

</div>

---------------------------------------------------
css: 
.BOX {
    width: 300px;  /* largura fixa */
    height: 200px; /* altura fixa*/
    background-color: red;
}
_________________________________________________________________________________________________________________

2.EM (Relativo to Parent font size)

Uso recomendado:

Quando você deseja que o tamanho  de um elemento seja relativo ao tamanho da fonte
de seu elemento pai. Ideal para criar layouts e tipografia que se adaptam ao tamanho
do texto do pai.



QUANDO EVITAR:

Se você precisa de consistência em relação ao tamanho da fonte em toda a aplicação, 
independente da hierarquia de elemento.


---------------------------------------------------------
EXEMPLO DE USO:

HTML

<div class= "conteiner">

      <div class= "child">

      </div>

</div>
---------------------------------------------------------

CSS:

.conteiner {
    fonte-size: 16px /* tamanho base - pai */

}


.child {
    fonte-size: 1.5rem;  /* 1.5 vezes o tamanho da fonte do pai (24px) */
}
_________________________________________________________________________________________________________________


3. REM (Relativo to root font size)

Uso Recomendado:

Para criar tamanhos de fonte e espaçamentos consistentes em toda a aplicação, 
baseando-se no tamanho da fonte raiz (<html>).

Ideal para layouts e tipografia que precisam ser consistentes do tamanho
da fonte dos elementos pais.


QUANDO DEVO EVITAR:

Quando você quer um tamanho que seja relativo apenas ao elemento pai específico
e não á raiz.


---------------------------------------------------------
EXEMPLO DE USO:

HTML:

<div class= "conteiner">

    <div class= "text">
            <p> lorem </p>
    </div>

</div>
---------------------------------------------------------

CSS:

HTML{
    fonte-size: 16px; /* tamanho base da fonte */
}

.Text{
    fonte-size: 2rem; /* 32px (2* 16px)*/
}

_________________________________________________________________________________________________________________

4. vh (viewport height)

Uso recomendado:

Para definir tamanhos de altura relativos á altura da viewport, como para criar seções de tela cheia 
ou  elementos que devem ocupar uma porcentagem da altura da tela.
Ideal para layouts que devem se ajustar á altura da tela do usuários.

QUANDO EVITAR:

Para Elementos que não precisam ser sensíveis ao tamanho da viewport e devem ter tamanhos 
fixos ou proporcionais ao conteúdo.

---------------------------------------------------------

EXEMPLO DE USO:

HTML
</section class= "fullscreen-section">
    <p> Loren </p>
</section>

testa em tamanho de telas diferentes
---------------------------------------------------------

CSS: 
.fullscreen-section {
    height: 100vh; /* 100% da altura da viewport */
    width: 50vw; 
    background-color: black;
}
_________________________________________________________________________________________________________________

5. vw (viewport width)

Uso recomendado:

para Definir tamanhos de largura relativos á largura da viewport, útil para criar layouts responsivos 
ou elementos que devem ajustar a largurar da tela.
Ideal para elementos que precisam ocupar uma porcentagem da largura da tela do usuário.

QUANDO EVITAR:
Para elementos cuja largura não deve depender da largura da viewport e ser fixa ou proporcional ao conteúdo.


EXEMPLO DE USO:

HTML
<section class= "responsive-element">
              <p> lorem </p>
</section>    

--------------------------------------------------------

CSS:

.responsive-element{
    width: 50vw; /* 50% da largura da viewport */
    height: 50vh;
    background-color: Yellow;
}


_________________________________________________________________________________________________________________

6.% (Percentual)

Uso recomendado:

Para definir tamanhos relativos ao tamanho do elemento pai, ideal para layouts flexível e adaptáveis.
útil para definir larguras e alturas de elemento dentro de conteiners com tamanhos variáveis.







